services:
  app:
    build:
      context: .
    container_name: cachet-app
    ports:
      - "80:80"
      - "443:443"
    restart: on-failure
    environment:
      - APP_ENV=${APP_ENV}
      - APP_KEY=${APP_KEY}
      - APP_DEBUG=false
      - APP_URL=${APP_URL}
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=cachet
      - DB_USERNAME=cachet
      - DB_PASSWORD=${DB_PASSWORD}
      - CACHET_TRUSTED_PROXIES=*
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./conf/nginx-site.conf:/etc/nginx/conf.d/default.conf:ro
      - ./conf/ssl:/etc/nginx/ssl:ro
      - ./cachet_data:/var/www/html
      - ./logs/nginx:/var/log/nginx
     restart: unless-stopped

  db:
    image: mysql:8.0
    container_name: cachet-db
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=cachet
      - MYSQL_USER=cachet
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./db_data:/var/lib/mysql/data
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    restart: unless-stopped
    networks:
      - cachet

volumes:
  db_data:
  cachet_data:
  nginx_logs:
